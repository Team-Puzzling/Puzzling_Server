# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Puzzling-Server CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    # 1) 워크플로우 실행 전 기본적으로 체크아웃 필요
    - name: checkout
      uses: actions/checkout@v3
    
    # 2) JDK 11버전 설치, 다른 JDK 버전을 사용하다면 수정
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    # 3) 환경변수 파일 생성
    - name: make application.yml 파일 생성
      run: |
        ## create application.yml
        mkdir ./puzzlingServer/src/main/resources
        cd ./puzzlingServer/src/main/resources

        # application.yml 파일 생성
        touch ./application.yml

        # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
        echo "${{ secrets.TRAVALUE_APPLICATION }}" >> ./application.yml
        
        # application.yml 파일 확인
        cat ./application.yml
      shell: bash
        
    # 이 워크플로우는 gradle build
    - name: Grant execute permission for gradlew
      run: chmod +x ./puzzlingServer/gradlew
      
    - name: Build with Gradle # 실제 application build(-x 옵션을 통해 test는 제외)
      run: |
        cd puzzlingServer
        ./gradlew build -x test
        
    # 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy
      
    # Jar 파일 복사
    - name: Copy Jar
      run: |
        echo "Current directory: $PWD" 
        cp ./puzzlingServer/build/libs/*.jar ./deploy
    
    # appspec.yml 파일 복사
    - name: Copy appspec.yml
      run: cp ./puzzlingServer/appspec.yml ./deploy

    # script files 복사
    - name: Copy script
      run: cp ./puzzlingServer/scripts/*.sh ./deploy
      
    - name: Make zip file
      run: zip -r ./puzzling_server.zip ./deploy
      shell: bash
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2
        
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./puzzling_server.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/
      
    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run:
        aws deploy create-deployment 
        --application-name puzzling-server-codedeploy
        --deployment-group-name puzzling-server-codedeploy-group
        --file-exists-behavior OVERWRITE 
        --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},bundleType=zip,key=puzzling_server.zip
        --region ap-northeast-2
